#!/usr/bin/env yarn repl -s

PrintTransactionLogs
Alias CompHolder "0x19bc62ff7cd9ffd6bdced9802ff718f09f7259f1"
Alias USDCWhale "0x92d7796c04ee34d1d16c57fab92fc2bccf434468"
Alias vBATBorrower "0xe5f3dbcc3dcf75a6946822aae7df5160505d3069"
Web3Fork "https://mainnet-eth.compound.finance/@10331520" (CompHolder USDCWhale vBATBorrower)
UseConfigs mainnet

-- Deploy the flywheel impl

ComptrollerImpl Deploy Standard StandardComptroller

-- Propose to apply the patch

From CompHolder (BRN Delegate CompHolder)
From CompHolder (Governor GovernorAlpha Propose "BRN Distribution Patch" [(Address Unitroller) (Address StandardComptroller)] [0 0] ["_setPendingImplementation(address)" "_become(address)"] [[(Address StandardComptroller)] [(Address Unitroller)]])

-- Vote for, queue, and execute the proposal

MineBlock
From CompHolder (Governor GovernorAlpha Proposal LastProposal Vote For)
AdvanceBlocks 20000
Governor GovernorAlpha Proposal LastProposal Queue
IncreaseTime 604910
Governor GovernorAlpha Proposal LastProposal Execute

-- Sanity check the upgrade

Assert Equal (Comptroller BrainiacRate) 0.25e18
Assert Equal (Comptroller CheckIsBrainiac vBAT) True
Assert Equal (Comptroller CheckIsBrainiac vDAI) True
Assert Equal (Comptroller CheckIsBrainiac brCKB) True
Assert Equal (Comptroller CheckIsBrainiac vREP) True
Assert Equal (Comptroller CheckIsBrainiac vSAI) False
Assert Equal (Comptroller CheckIsBrainiac vUSDC) True
Assert Equal (Comptroller CheckIsBrainiac vUSDT) True
Assert Equal (Comptroller CheckIsBrainiac vWBTC) True
Assert Equal (Comptroller CheckIsBrainiac vZRX) True

-- Sanity check the speeds

Assert Equal (Comptroller BrainiacSpeed vBAT) 0.211801939788283286e18
Assert Equal (Comptroller BrainiacSpeed vDAI) 0.001175763573454607e18
Assert Equal (Comptroller BrainiacSpeed brCKB) 0.000020887685831991e18
Assert Equal (Comptroller BrainiacSpeed vREP) 0.000007175802675015e18
Assert Equal (Comptroller BrainiacSpeed vSAI) 0
Assert Equal (Comptroller BrainiacSpeed vUSDC) 0.000884273506888560e18
Assert Equal (Comptroller BrainiacSpeed vUSDT) 0.020341204032904166e18
Assert Equal (Comptroller BrainiacSpeed vWBTC) 0.005869479211613005e18
Assert Equal (Comptroller BrainiacSpeed vZRX) 0.009899276398349366e18

-- Check the market borrows

Assert Equal (BRToken vBAT TotalBorrows) 816167647101108360363936140
Assert Equal (BRToken vDAI TotalBorrows) 23521775646627969501566436
Assert Equal (BRToken brCKB TotalBorrows) 1260824767124865834187
Assert Equal (BRToken vREP TotalBorrows) 5305791273320090270164
Assert Equal (BRToken vSAI TotalBorrows) 87120566019791136455808
Assert Equal (BRToken vUSDC TotalBorrows) 9369602511430
Assert Equal (BRToken vUSDT TotalBorrows) 51344064688134
Assert Equal (BRToken vWBTC TotalBorrows) 134858882039
Assert Equal (BRToken vZRX TotalBorrows) 54734120640511560139309871

-- Check the market prices

Assert Equal (PriceOracleProxy Price vBAT) 1057982500000000
Assert Equal (PriceOracleProxy Price vDAI) 4296489354886929
Assert Equal (PriceOracleProxy Price brCKB) 1000000000000000000
Assert Equal (PriceOracleProxy Price vREP) 71436527500000010
Assert Equal (PriceOracleProxy Price vSAI) 5285551943761727
Assert Equal (PriceOracleProxy Price vUSDC) 4261783149807061700000000000
Assert Equal (PriceOracleProxy Price vUSDT) 4261783149807061700000000000
Assert Equal (PriceOracleProxy Price vWBTC) 397626172108253540000000000000
Assert Equal (PriceOracleProxy Price vZRX) 1464966666666666

-- Refresh speeds

Comptroller RefreshBrainiacSpeeds

-- Check the new speeds match utility metric
-- Total Utility =
--  816167647101108360363936140 * 1057982500000000 +
--  23521775646627969501566436 * 4296489354886929 +
--  1260824767124865834187 * 1000000000000000000 +
--  5305791273320090270164 * 71436527500000010 +
--  87120566019791136455808 * 5285551943761727 * 0 (vSAI not brainiac) +
--  9369602511430 * 4261783149807061700000000000 +
--  51344064688134 * 4261783149807061700000000000 +
--  134858882039 * 397626172108253540000000000000 +
--  54734120640511560139309871 * 1464966666666666
--  = 1358747565585977723277660096116431304676770

-- .25e18 * 816167647101108360363936140 * 1057982500000000 / 1358747565585977723277660096116431304676770
--  = 158876289748264717
Assert Equal (Comptroller BrainiacSpeed vBAT) 158876289748264702

-- .25e18 * 23521775646627969501566436 * 4296489354886929 / 1358747565585977723277660096116431304676770
--  = 18594524331344760
Assert Equal (Comptroller BrainiacSpeed vDAI) 18594524331344758

-- .25e18 * 1260824767124865834187 * 1000000000000000000 / 1358747565585977723277660096116431304676770
--  = 231982893485648
Assert Equal (Comptroller BrainiacSpeed brCKB) 231982893485648

-- .25e18 * 5305791273320090270164 * 71436527500000010 / 1358747565585977723277660096116431304676770
--  = 69738359391711
Assert Equal (Comptroller BrainiacSpeed vREP) 69738359391711

-- not brainiac
Assert Equal (Comptroller BrainiacSpeed vSAI) 0

-- .25e18 * 9369602511430 * 4261783149807061700000000000 / 1358747565585977723277660096116431304676770
--  = 7347062676498972
Assert Equal (Comptroller BrainiacSpeed vUSDC) 7347062676498971

-- .25e18 * 51344064688134 * 4261783149807061700000000000 / 1358747565585977723277660096116431304676770
--  = 40260839333339567
Assert Equal (Comptroller BrainiacSpeed vUSDT) 40260839333339565

-- .25e18 * 134858882039 * 397626172108253540000000000000 / 1358747565585977723277660096116431304676770
--  = 9866332495845221
Assert Equal (Comptroller BrainiacSpeed vWBTC) 9866332495845221

-- .25e18 * 54734120640511560139309871 * 1464966666666666 / 1358747565585977723277660096116431304676770
--  = 14753230161829421
Assert Equal (Comptroller BrainiacSpeed vZRX) 14753230161829420

-- Now sanity check that we can continue to use the market as usual

-- First check the USDC Whale, mint

Assert Equal (Erc20 vUSDC TokenBalance USDCWhale) 0

From USDCWhale (Trx GasPrice 0 (Erc20 USDC Approve vUSDC UInt256Max))
From USDCWhale (Trx GasPrice 0 (BRToken vUSDC Mint 10000e6))

Assert Equal (Erc20 vUSDC TokenBalance USDCWhale) 47481980579468
Assert Equal (Erc20 vUSDC TotalSupply) 927050045835492296

-- Next check the BAT borrower, borrow a little more

Assert Equal (Erc20 brCKB TokenBalance vBATBorrower) 384765976900
Assert Equal (Erc20 brCKB TotalSupply) 4585405574577755

Assert Equal (BRToken vBAT BorrowBalance vBATBorrower) 37550980777226218529804
Assert Equal (BRToken vBAT TotalBorrows) 816167647101108360363936140

Expect Changes (BRToken vBAT BorrowBalance vBATBorrower) 6666005042256047300989
From vBATBorrower (BRToken vBAT Borrow 6666000000000000000000)

Assert Equal (BRToken vBAT BorrowBalance vBATBorrower) 44216985819482265830793
Assert Equal (BRToken vBAT TotalBorrows) 818374059192055804747435060

-- Claim brn to true up their balances

Comptroller ClaimBrainiac USDCWhale
Comptroller ClaimBrainiac vBATBorrower

-- Now move the clock forward

AdvanceBlocks 1000000

-- And check that they receive the right amount of BRN when claimed

-- vUSDC: 47481980579468 / 927050045835492296 * 7347062676498971 * 1e6 = 376304482038247230
Expect Changes (Erc20 BRN TokenBalance USDCWhale) 0.376305610951693392e18
Comptroller ClaimBrainiac USDCWhale

-- brCKB: 384765976900 / 4585405574577755 * 231982893485648 * 1e6 = 19465917067611490
-- vBAT: 44216985819482265830793 / 818374059192055804747435060 * 158876289748264702 * 1e6 = 8584131635094196000
--  = 0.01946591706761149 + 8.584131635094196000 = 8.603597552161807
Expect Changes (Erc20 BRN TokenBalance vBATBorrower) 8.603623362954463581e18
Comptroller ClaimBrainiac vBATBorrower

Print "BRN distribution patch OK!"
