-- NewComptroller, but with markets listed so that we can make them brainiac markets in constructor
Macro FlywheelComptroller price=1.0 borrowRate=0.000005 brainiacInitAmount=5000000e18
    Unitroller Deploy
    PriceOracle Deploy Fixed price
    PriceOracleProxy Deploy Admin (PriceOracle Address) (Address Zero) (Address Zero) (Address Zero) (Address Zero) (Address Zero)
    --g1
    ComptrollerImpl Deploy ScenarioG1 ComptrollerScenG1
    Unitroller SetPendingImpl ComptrollerScenG1
    ComptrollerImpl ComptrollerScenG1 BecomeG1
    --list some tokens
    Comptroller SetPriceOracle (PriceOracleProxy Address)
    Comptroller SetMaxAssets 20
    Comptroller SetCloseFactor 0.5
    Comptroller LiquidationIncentive 1.1
    Comptroller SetBrainiacRate 1e18
    NewBRToken ZRX vZRX
    NewBRToken BAT vBAT
    Support vZRX collateralFactor:0.5
    Support vBAT collateralFactor:0.5
    Comptroller AddBrainiacMarkets (vZRX vBAT)
    Erc20 Deploy Standard BRN "BRN Token" 18
    Give (Address Comptroller) brainiacInitAmount BRN
    Comptroller Send "setBRNAddress(address)" (Address BRN)
    Erc20 Deploy Standard BAI "BAI Token" 18
    Give (Address Comptroller) brainiacInitAmount BAI
    Comptroller Send "setBAIAddress(address)" (Address BAI)

Macro InitSpeeds
    Prep Geoff 100e18 ZRX vZRX
    Mint Geoff 50e18 vZRX--tokenbalance = 50e18 / 2e9 = 2.5e10
    Prep Coburn Some BAT vBAT
    Mint Coburn 6e18 vBAT--tokenbalance = 6e18 / 2e9 = 3e9
    EnterMarkets Coburn vBAT
    Borrow Coburn 1e18 vZRX
    Comptroller RefreshBrainiacSpeeds

Test "Accrue BRN during a mint"
    FlywheelComptroller
    InitSpeeds
    FastForward 300000 Blocks
    Assert Equal (Comptroller BrainiacAccrued Geoff) 0
    Mint Geoff 1e18 vZRX
    -- new index = initVal + deltaBlocks * supplySpeed * 1e36 / totalSupply
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 2.5e10 = 1.2000000000001e49
    Assert Equal (Comptroller BrainiacAccrued Geoff) 0
    Assert Equal (Comptroller BrainiacSupplyState vZRX "index") 1.2000000000001e49
    Assert Equal (Comptroller BrainiacSupplyState vZRX "block") 300000
    Assert Equal (Erc20 BRN TokenBalance Geoff) 300000e18
    Assert Equal (Comptroller BrainiacSupplierIndex vZRX Geoff) 1.2000000000001e49

Test "Accrue BRN during a borrow"
    FlywheelComptroller
    InitSpeeds
    Comptroller FastForward 300000 Blocks
    Assert Equal (Comptroller BrainiacAccrued Coburn) 0
    Borrow Coburn 0.1e18 vZRX
    -- new index = initVal + deltaBlocks * borrowSpeed * 1e36 / totalBorrows
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 1e18 =  3.00001e41
    Assert Equal (Comptroller BrainiacAccrued Coburn) 0
    Assert Equal (Comptroller BrainiacBorrowState vZRX "index") 3.00001e41
    Assert Equal (Comptroller BrainiacBorrowState vZRX "block") 300000
    Assert Equal (Erc20 BRN TokenBalance Coburn) 300000e18
    Assert Equal (Comptroller BrainiacBorrowerIndex vZRX Coburn) 3.00001e41

Skip "Accrue BRN during a redeem"
    FlywheelComptroller
    InitSpeeds
    FastForward 300000 Blocks
    Assert Equal (Comptroller BrainiacAccrued Geoff) 0
    Redeem Geoff 1e9 vZRX
    -- new index = initVal + deltaBlocks * supplySpeed * 1e36 / totalSupply
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 2.5e10 = 1.2000000000001e49
    Assert Equal (Comptroller BrainiacAccrued Geoff) 0
    Assert Equal (Comptroller BrainiacSupplyState vZRX "index") 1.2000000000001e49
    Assert Equal (Comptroller BrainiacSupplyState vZRX "block") 300000
    Assert Equal (Erc20 BRN TokenBalance Geoff) 300000e18
    Assert Equal (Comptroller BrainiacSupplierIndex vZRX Geoff) 1.2000000000001e49

Test "Accrue BRN during a repayBorrow"
    FlywheelComptroller
    InitSpeeds
    FastForward 300000 Blocks
    Assert Equal (Comptroller BrainiacAccrued Geoff) 0
    Prep Coburn 0.5e18 ZRX vZRX
    RepayBorrow Coburn 0.5e18 vZRX
    -- new index = initVal + deltaBlocks * borrowSpeed * 1e36 / totalBorrows
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 1e18 =  3.00001e41
    Assert Equal (Comptroller BrainiacAccrued Coburn) 0
    Assert Equal (Comptroller BrainiacBorrowState vZRX "index") 3.00001e41
    Assert Equal (Comptroller BrainiacBorrowState vZRX "block") 300000
    Assert Equal (Erc20 BRN TokenBalance Coburn) 300000e18
    Assert Equal (Comptroller BrainiacBorrowerIndex vZRX Coburn) 3.00001e41

Test "Accrue BRN during a repayBorrowBehalf of 0"
    FlywheelComptroller
    InitSpeeds
    FastForward 300000 Blocks
    Assert Equal (Comptroller BrainiacAccrued Geoff) 0
    -- confirm we can init all flywheel accounts for free
    RepayBorrowBehalf Jared Coburn 0 vZRX
    -- new index = initVal + deltaBlocks * borrowSpeed * 1e36 / totalBorrows
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 1e18 = 3.00001e41
    Assert Equal (Comptroller BrainiacAccrued Coburn) 0
    Assert Equal (Comptroller BrainiacBorrowState vZRX "index") 3.00001e41
    Assert Equal (Comptroller BrainiacBorrowState vZRX "block") 300000
    Assert Equal (Erc20 BRN TokenBalance Coburn) 300000e18
    Assert Equal (Comptroller BrainiacBorrowerIndex vZRX Coburn) 3.00001e41

Test "Accrue BRN during a liquidation"
    FlywheelComptroller
    InitSpeeds
    Assert Equal (Comptroller BrainiacSpeed vZRX) 1e18
    Assert Equal (Comptroller BrainiacSpeed vBAT) 0
    --coburn zrx borrow, bat supply. geoff zrx supply
    FastForward 600000 Blocks--1e18 borrow * (1 + 600000 * 0.000005) = 3.5e18 borrow > 6e18 collateral * 0.5 CF
    Prep Geoff Some ZRX vZRX
    From Geoff (BRToken vZRX Liquidate Coburn vBAT 0.5e18)
    -- zrx borrow index is updated and brn distributed
    -- * new index = initVal + deltaBlocks * borrowSpeed * 1e36 / totalBorrows
    -- * new index = 1e36 + 600000 * 1e18 * 1e36 / 1e18 = 6.00001E41
    Assert Equal (Comptroller BrainiacBorrowState vZRX "index") 6.00001e41
    Assert Equal (Comptroller BrainiacBorrowState vZRX "block") 600000
    -- zrx supply index isnt updated and brn isnt distributed for zrx supply
    Assert Equal (Comptroller BrainiacSupplyState vZRX "index") 1e36
    Assert Equal (Comptroller BrainiacSupplyState vZRX "block") 0
    Assert Equal (Comptroller BrainiacSupplierIndex vZRX Geoff) 1e36--no change, minted in init
    -- bat supply/borrow index is not updated, since there is no brn speed
    Assert Equal (Comptroller BrainiacSupplyState vBAT "index") 1e36
    Assert Equal (Comptroller BrainiacSupplyState vBAT "block") 600000
    -- neither is borrow state. block is 0 because update fn is never even called
    Assert Equal (Comptroller BrainiacBorrowState vBAT "index") 1e36
    Assert Equal (Comptroller BrainiacBorrowState vBAT "block") 0
    --
    Assert Equal (Comptroller BrainiacSupplierIndex vBAT Coburn) 1e36
    Assert Equal (Comptroller BrainiacBorrowerIndex vZRX Coburn) 6.00001e41
    Assert Equal (Erc20 BRN TokenBalance Coburn) 600000e18
    Assert Equal (Comptroller BrainiacAccrued Coburn) 0
    --
    Assert Equal (Comptroller BrainiacSupplierIndex vBAT Geoff) 1e36
    Assert Equal (Erc20 BRN TokenBalance Geoff) 0
    Assert Equal (Comptroller BrainiacAccrued Geoff) 0

Test "Accrue BRN during a transfer"
    FlywheelComptroller
    InitSpeeds
    FastForward 300000 Blocks
    Assert Equal (Erc20 BRN TokenBalance Geoff) 0
    Assert Equal (Comptroller BrainiacSupplierIndex vZRX Geoff) 1e36
    Transfer Geoff Jared 2.5e10 vZRX
    -- new index = initVal + deltaBlocks * supplySpeed * 1e36 / totalSupply
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 2.5e10 = 1.2000000000001e49
    Assert Equal (Erc20 BRN TokenBalance Geoff) 300000e18
    Assert Equal (Comptroller BrainiacAccrued Geoff) 0
    Assert Equal (Comptroller BrainiacSupplyState vZRX "index") 1.2000000000001e49
    Assert Equal (Comptroller BrainiacSupplyState vZRX "block") 300000
    Assert Equal (Comptroller BrainiacSupplierIndex vZRX Geoff) 1.2000000000001e49
    --
    Assert Equal (Comptroller BrainiacAccrued Jared) 0
    Assert Equal (Comptroller BrainiacSupplyState vZRX "index") 1.2000000000001e49
    Assert Equal (Comptroller BrainiacSupplyState vZRX "block") 300000
    Assert Equal (Comptroller BrainiacSupplierIndex vZRX Jared) 1.2000000000001e49

Test "Accrues correctly when market is added, deactivated, and activated again"
    FlywheelComptroller
    InitSpeeds
    NewBRToken DAI vDAI
    --
    Support vDAI collateralFactor:0.5
    Comptroller AddBrainiacMarkets vDAI
    Assert Equal (Comptroller GetBrainiacMarkets) [(Address vZRX) (Address vBAT) (Address vDAI)]
    Prep Jared Some DAI vDAI
    Mint Jared 6e18 vDAI
    EnterMarkets Geoff vZRX
    Borrow Geoff 0.5e18 vDAI
    Borrow Coburn 0.5e18 vDAI
    Comptroller RefreshBrainiacSpeeds
    Assert Equal (Comptroller BrainiacSpeed vZRX) 0.5e18
    Assert Equal (Comptroller BrainiacSpeed vDAI) 0.5e18
    --
    FastForward 100 Blocks
    Comptroller DropBrainiacMarket vDAI
    Comptroller ClaimBrainiac Geoff
    Assert Equal (Erc20 BRN TokenBalance Geoff) 75e18--half of vdai, all of zrx(.25e18 + .5e18) * 100
    Assert Equal (Comptroller GetBrainiacMarkets) [(Address vZRX) (Address vBAT)]
    Assert Equal (Comptroller BrainiacSpeed vZRX) 1e18
    Assert Equal (Comptroller BrainiacSpeed vDAI) 0
    --
    FastForward 100 Blocks
    Comptroller ClaimBrainiac Geoff
    Assert Equal (Erc20 BRN TokenBalance Geoff) 175e18-- += 1e18 * 100
    Assert Equal (Comptroller BrainiacAccrued Geoff) 0
    --
    Comptroller AddBrainiacMarkets vDAI
    FastForward 100 Blocks
    Comptroller ClaimBrainiac Geoff
    Assert Equal (Erc20 BRN TokenBalance Geoff) 250e18--half of vdai, all of zrx. += (.25 + .5) * 100
    Assert Equal (Comptroller BrainiacAccrued Geoff) 0

Test "TransferComp handles running out of BRN in Comptroller correctly"
    FlywheelComptroller price:1.0 borrowRate:0.000005 brainiacInitAmount:1e18
    InitSpeeds
    FastForward 2 Blocks
    Comptroller ClaimBrainiac Geoff
    Assert Equal (Comptroller BrainiacAccrued Geoff) 2e18
    Assert Equal (Erc20 BRN TokenBalance Geoff) 0
    Give (Address Comptroller) 1e18 BRN
    Comptroller ClaimBrainiac Geoff
    Assert Equal (Comptroller BrainiacAccrued Geoff) 0
    Assert Equal (Erc20 BRN TokenBalance Geoff) 2e18

Test "Changing BRN rate continues to distribute at the correct speed"
    FlywheelComptroller
    InitSpeeds
    --
    Assert Equal (Comptroller BrainiacSpeed vZRX) 1e18
    FastForward 10 Blocks
    Comptroller SetBrainiacRate 2e18
    Assert Equal (Comptroller BrainiacSpeed vZRX) 2e18
    FastForward 10 Blocks
    Comptroller ClaimBrainiac Geoff
    Assert Equal (Comptroller BrainiacAccrued Geoff) 0
    Assert Equal (Erc20 BRN TokenBalance Geoff) 30e18
