{
  "address": "0x9e52E46B9EA5381f36EF77240C0b9273d79794eD",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldGuardian",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newGuardian",
          "type": "address"
        }
      ],
      "name": "NewGuardian",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldImplementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "NewImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "NewPendingAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMaxOperations",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMaxOperations",
          "type": "uint256"
        }
      ],
      "name": "ProposalMaxOperationsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldProposalThreshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newProposalThreshold",
          "type": "uint256"
        }
      ],
      "name": "ProposalThresholdSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingDelay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "VotingDelaySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "VotingPeriodSet",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_PROPOSAL_THRESHOLD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_VOTING_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_VOTING_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MIN_PROPOSAL_THRESHOLD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MIN_VOTING_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MIN_VOTING_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "_acceptAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "governorAlpha",
          "type": "address"
        }
      ],
      "name": "_initiate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newGuardian",
          "type": "address"
        }
      ],
      "name": "_setGuardian",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "_setPendingAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalMaxOperations_",
          "type": "uint256"
        }
      ],
      "name": "_setProposalMaxOperations",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newProposalThreshold",
          "type": "uint256"
        }
      ],
      "name": "_setProposalThreshold",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "_setVotingDelay",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "_setVotingPeriod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "castVoteWithReason",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getActions",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint96",
              "name": "votes",
              "type": "uint96"
            }
          ],
          "internalType": "struct GovernorBravoDelegateStorageV1.Receipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "guardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialProposalId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "timelock_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "xvsVault_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "votingPeriod_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votingDelay_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "proposalThreshold_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "guardian_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "latestProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalMaxOperations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "abstainVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canceled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "queue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "quorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum GovernorBravoDelegateStorageV1.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "contract TimelockInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "xvsVault",
      "outputs": [
        {
          "internalType": "contract XvsVaultInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xf3a6a8bfc3fbaf42826e6949b5f201d24795ba04e3b6ac27240fbe7e67a3a60d",
  "receipt": {
    "to": null,
    "from": "0x02FE5abFC9054C9E23B47c7743eE6F55b35E8470",
    "contractAddress": "0x9e52E46B9EA5381f36EF77240C0b9273d79794eD",
    "transactionIndex": 0,
    "gasUsed": "4188",
    "logsBloom": "0x
    "blockHash": "0xc36654b51b10fddc61166ec63ac6e65cda0c854780036c556cd052be9797f83a",
    "transactionHash": "0xf3a6a8bfc3fbaf42826e6949b5f201d24795ba04e3b6ac27240fbe7e67a3a60d",
    "logs": [],
    "blockNumber": 53992,
    "cumulativeGasUsed": "4188",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "56dc1f35cfb06e624526ce5e3cf221d6",
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldGuardian\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGuardian\",\"type\":\"address\"}],\"name\":\"NewGuardian\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"NewImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMaxOperations\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxOperations\",\"type\":\"uint256\"}],\"name\":\"ProposalMaxOperationsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldProposalThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"ProposalThresholdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"VotingDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodSet\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_PROPOSAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_VOTING_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_PROPOSAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_VOTING_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_acceptAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"governorAlpha\",\"type\":\"address\"}],\"name\":\"_initiate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGuardian\",\"type\":\"address\"}],\"name\":\"_setGuardian\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"_setPendingAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalMaxOperations_\",\"type\":\"uint256\"}],\"name\":\"_setProposalMaxOperations\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"_setProposalThreshold\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"_setVotingDelay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"_setVotingPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getActions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"internalType\":\"struct GovernorBravoDelegateStorageV1.Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"guardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"timelock_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"xvsVault_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingDelay_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalThreshold_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"latestProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalMaxOperations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"quorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum GovernorBravoDelegateStorageV1.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"contract TimelockInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"xvsVault\",\"outputs\":[{\"internalType\":\"contract XvsVaultInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"_acceptAdmin()\":{\"details\":\"Admin function for pending admin to accept role and update admin\"},\"_initiate(address)\":{\"details\":\"Admin only. Sets initial proposal id which initiates the contract, ensuring a continuous proposal id count\",\"params\":{\"governorAlpha\":\"The address for the Governor to continue the proposal id count from\"}},\"_setGuardian(address)\":{\"params\":{\"newGuardian\":\"the address of the new guardian\"}},\"_setPendingAdmin(address)\":{\"details\":\"Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\",\"params\":{\"newPendingAdmin\":\"New pending admin.\"}},\"_setProposalMaxOperations(uint256)\":{\"details\":\"Admin only.\",\"params\":{\"proposalMaxOperations_\":\"Max proposal operations\"}},\"_setProposalThreshold(uint256)\":{\"details\":\"newProposalThreshold must be greater than the hardcoded min\",\"params\":{\"newProposalThreshold\":\"new proposal threshold\"}},\"_setVotingDelay(uint256)\":{\"params\":{\"newVotingDelay\":\"new voting delay, in blocks\"}},\"_setVotingPeriod(uint256)\":{\"params\":{\"newVotingPeriod\":\"new voting period, in blocks\"}},\"cancel(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to cancel\"}},\"castVote(uint256,uint8)\":{\"params\":{\"proposalId\":\"The id of the proposal to vote on\",\"support\":\"The support value for the vote. 0=against, 1=for, 2=abstain\"}},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"External function that accepts EIP-712 signatures for voting on proposals.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"params\":{\"proposalId\":\"The id of the proposal to vote on\",\"reason\":\"The reason given for the vote by the voter\",\"support\":\"The support value for the vote. 0=against, 1=for, 2=abstain\"}},\"execute(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to execute\"}},\"getActions(uint256)\":{\"params\":{\"proposalId\":\"the id of the proposal\"},\"return\":\"Targets, values, signatures, and calldatas of the proposal actions\"},\"getReceipt(uint256,address)\":{\"params\":{\"proposalId\":\"the id of proposal\",\"voter\":\"The address of the voter\"},\"return\":\"The voting receipt\"},\"initialize(address,address,uint256,uint256,uint256,address)\":{\"params\":{\"proposalThreshold_\":\"The initial proposal threshold\",\"timelock_\":\"The address of the Timelock\",\"votingDelay_\":\"The initial voting delay\",\"votingPeriod_\":\"The initial voting period\",\"xvsVault_\":\"The address of the XvsVault\"}},\"propose(address[],uint256[],string[],bytes[],string)\":{\"params\":{\"calldatas\":\"Calldatas for proposal calls\",\"description\":\"String description of the proposal\",\"signatures\":\"Function signatures for proposal calls\",\"targets\":\"Target addresses for proposal calls\",\"values\":\"Eth values for proposal calls\"},\"return\":\"Proposal id of new proposal\"},\"queue(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to queue\"}},\"state(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal\"},\"return\":\"Proposal state\"}}},\"userdoc\":{\"methods\":{\"_acceptAdmin()\":{\"notice\":\"Accepts transfer of admin rights. msg.sender must be pendingAdmin\"},\"_initiate(address)\":{\"notice\":\"Initiate the GovernorBravo contract\"},\"_setGuardian(address)\":{\"notice\":\"Sets the new governance guardian\"},\"_setPendingAdmin(address)\":{\"notice\":\"Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\"},\"_setProposalMaxOperations(uint256)\":{\"notice\":\"Set max proposal operations\"},\"_setProposalThreshold(uint256)\":{\"notice\":\"Admin function for setting the proposal threshold\"},\"_setVotingDelay(uint256)\":{\"notice\":\"Admin function for setting the voting delay\"},\"_setVotingPeriod(uint256)\":{\"notice\":\"Admin function for setting the voting period\"},\"cancel(uint256)\":{\"notice\":\"Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold\"},\"castVote(uint256,uint8)\":{\"notice\":\"Cast a vote for a proposal\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"notice\":\"Cast a vote for a proposal by signature\"},\"castVoteWithReason(uint256,uint8,string)\":{\"notice\":\"Cast a vote for a proposal with a reason\"},\"execute(uint256)\":{\"notice\":\"Executes a queued proposal if eta has passed\"},\"getActions(uint256)\":{\"notice\":\"Gets actions of a proposal\"},\"getReceipt(uint256,address)\":{\"notice\":\"Gets the receipt for a voter on a given proposal\"},\"initialize(address,address,uint256,uint256,uint256,address)\":{\"notice\":\"Used to initialize the contract during delegator contructor\"},\"propose(address[],uint256[],string[],bytes[],string)\":{\"notice\":\"Function used to propose a new proposal. Sender must have delegates above the proposal threshold\"},\"queue(uint256)\":{\"notice\":\"Queues a proposal of state succeeded\"},\"state(uint256)\":{\"notice\":\"Gets the state of a proposal\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/Governance/GovernorBravoDelegate.sol\":\"GovernorBravoDelegate\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Governance/GovernorBravoDelegate.sol\":{\"content\":\"pragma solidity ^0.5.16;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\nimport \\\"./GovernorBravoInterfaces.sol\\\";\\r\\n\\r\\ncontract GovernorBravoDelegate is GovernorBravoDelegateStorageV1, GovernorBravoEvents {\\r\\n\\r\\n    /// @notice The name of this contract\\r\\n    string public constant name = \\\"Venus Governor Bravo\\\";\\r\\n\\r\\n    /// @notice The minimum setable proposal threshold\\r\\n    uint public constant MIN_PROPOSAL_THRESHOLD = 150000e18; // 150,000 Xvs\\r\\n\\r\\n    /// @notice The maximum setable proposal threshold\\r\\n    uint public constant MAX_PROPOSAL_THRESHOLD = 300000e18; //300,000 Xvs\\r\\n\\r\\n    /// @notice The minimum setable voting period\\r\\n    uint public constant MIN_VOTING_PERIOD = 20 * 60 * 24; // About 24 hours, 3 secs per block\\r\\n\\r\\n    /// @notice The max setable voting period\\r\\n    uint public constant MAX_VOTING_PERIOD = 20 * 60 * 24 * 14; // About 2 weeks, 3 secs per block\\r\\n\\r\\n    /// @notice The min setable voting delay\\r\\n    uint public constant MIN_VOTING_DELAY = 1;\\r\\n\\r\\n    /// @notice The max setable voting delay\\r\\n    uint public constant MAX_VOTING_DELAY = 20 * 60 * 24 * 7; // About 1 week, 3 secs per block\\r\\n\\r\\n    /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\\r\\n    uint public constant quorumVotes = 600000e18; // 600,000 = 2% of Xvs\\r\\n\\r\\n    /// @notice The EIP-712 typehash for the contract's domain\\r\\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\");\\r\\n\\r\\n    /// @notice The EIP-712 typehash for the ballot struct used by the contract\\r\\n    bytes32 public constant BALLOT_TYPEHASH = keccak256(\\\"Ballot(uint256 proposalId,uint8 support)\\\");\\r\\n\\r\\n    /**\\r\\n      * @notice Used to initialize the contract during delegator contructor\\r\\n      * @param timelock_ The address of the Timelock\\r\\n      * @param xvsVault_ The address of the XvsVault\\r\\n      * @param votingPeriod_ The initial voting period\\r\\n      * @param votingDelay_ The initial voting delay\\r\\n      * @param proposalThreshold_ The initial proposal threshold\\r\\n      */\\r\\n    function initialize(\\r\\n        address timelock_,\\r\\n        address xvsVault_,\\r\\n        uint votingPeriod_,\\r\\n        uint votingDelay_,\\r\\n        uint proposalThreshold_,\\r\\n        address guardian_\\r\\n    )\\r\\n        public\\r\\n    {\\r\\n        require(address(timelock) == address(0), \\\"GovernorBravo::initialize: can only initialize once\\\");\\r\\n        require(msg.sender == admin, \\\"GovernorBravo::initialize: admin only\\\");\\r\\n        require(timelock_ != address(0), \\\"GovernorBravo::initialize: invalid timelock address\\\");\\r\\n        require(xvsVault_ != address(0), \\\"GovernorBravo::initialize: invalid xvs address\\\");\\r\\n        require(votingPeriod_ >= MIN_VOTING_PERIOD && votingPeriod_ <= MAX_VOTING_PERIOD, \\\"GovernorBravo::initialize: invalid voting period\\\");\\r\\n        require(votingDelay_ >= MIN_VOTING_DELAY && votingDelay_ <= MAX_VOTING_DELAY, \\\"GovernorBravo::initialize: invalid voting delay\\\");\\r\\n        require(proposalThreshold_ >= MIN_PROPOSAL_THRESHOLD && proposalThreshold_ <= MAX_PROPOSAL_THRESHOLD, \\\"GovernorBravo::initialize: invalid proposal threshold\\\");\\r\\n        require(guardian_ != address(0), \\\"GovernorBravo::initialize: invalid guardian\\\");\\r\\n\\r\\n        timelock = TimelockInterface(timelock_);\\r\\n        xvsVault = XvsVaultInterface(xvsVault_);\\r\\n        votingPeriod = votingPeriod_;\\r\\n        votingDelay = votingDelay_;\\r\\n        proposalThreshold = proposalThreshold_;\\r\\n        proposalMaxOperations = 10;\\r\\n        guardian = guardian_;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @notice Function used to propose a new proposal. Sender must have delegates above the proposal threshold\\r\\n      * @param targets Target addresses for proposal calls\\r\\n      * @param values Eth values for proposal calls\\r\\n      * @param signatures Function signatures for proposal calls\\r\\n      * @param calldatas Calldatas for proposal calls\\r\\n      * @param description String description of the proposal\\r\\n      * @return Proposal id of new proposal\\r\\n      */\\r\\n    function propose(address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas, string memory description) public returns (uint) {\\r\\n        // Reject proposals before initiating as Governor\\r\\n        require(initialProposalId != 0, \\\"GovernorBravo::propose: Governor Bravo not active\\\");\\r\\n        require(xvsVault.getPriorVotes(msg.sender, sub256(block.number, 1)) > proposalThreshold, \\\"GovernorBravo::propose: proposer votes below proposal threshold\\\");\\r\\n        require(targets.length == values.length && targets.length == signatures.length && targets.length == calldatas.length, \\\"GovernorBravo::propose: proposal function information arity mismatch\\\");\\r\\n        require(targets.length != 0, \\\"GovernorBravo::propose: must provide actions\\\");\\r\\n        require(targets.length <= proposalMaxOperations, \\\"GovernorBravo::propose: too many actions\\\");\\r\\n\\r\\n        uint latestProposalId = latestProposalIds[msg.sender];\\r\\n        if (latestProposalId != 0) {\\r\\n          ProposalState proposersLatestProposalState = state(latestProposalId);\\r\\n          require(proposersLatestProposalState != ProposalState.Active, \\\"GovernorBravo::propose: one live proposal per proposer, found an already active proposal\\\");\\r\\n          require(proposersLatestProposalState != ProposalState.Pending, \\\"GovernorBravo::propose: one live proposal per proposer, found an already pending proposal\\\");\\r\\n        }\\r\\n\\r\\n        uint startBlock = add256(block.number, votingDelay);\\r\\n        uint endBlock = add256(startBlock, votingPeriod);\\r\\n\\r\\n        proposalCount++;\\r\\n        Proposal memory newProposal = Proposal({\\r\\n            id: proposalCount,\\r\\n            proposer: msg.sender,\\r\\n            eta: 0,\\r\\n            targets: targets,\\r\\n            values: values,\\r\\n            signatures: signatures,\\r\\n            calldatas: calldatas,\\r\\n            startBlock: startBlock,\\r\\n            endBlock: endBlock,\\r\\n            forVotes: 0,\\r\\n            againstVotes: 0,\\r\\n            abstainVotes: 0,\\r\\n            canceled: false,\\r\\n            executed: false\\r\\n        });\\r\\n\\r\\n        proposals[newProposal.id] = newProposal;\\r\\n        latestProposalIds[newProposal.proposer] = newProposal.id;\\r\\n\\r\\n        emit ProposalCreated(newProposal.id, msg.sender, targets, values, signatures, calldatas, startBlock, endBlock, description);\\r\\n        return newProposal.id;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @notice Queues a proposal of state succeeded\\r\\n      * @param proposalId The id of the proposal to queue\\r\\n      */\\r\\n    function queue(uint proposalId) external {\\r\\n        require(state(proposalId) == ProposalState.Succeeded, \\\"GovernorBravo::queue: proposal can only be queued if it is succeeded\\\");\\r\\n        Proposal storage proposal = proposals[proposalId];\\r\\n        uint eta = add256(block.timestamp, timelock.delay());\\r\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\r\\n            queueOrRevertInternal(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], eta);\\r\\n        }\\r\\n        proposal.eta = eta;\\r\\n        emit ProposalQueued(proposalId, eta);\\r\\n    }\\r\\n\\r\\n    function queueOrRevertInternal(address target, uint value, string memory signature, bytes memory data, uint eta) internal {\\r\\n        require(!timelock.queuedTransactions(keccak256(abi.encode(target, value, signature, data, eta))), \\\"GovernorBravo::queueOrRevertInternal: identical proposal action already queued at eta\\\");\\r\\n        timelock.queueTransaction(target, value, signature, data, eta);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @notice Executes a queued proposal if eta has passed\\r\\n      * @param proposalId The id of the proposal to execute\\r\\n      */\\r\\n    function execute(uint proposalId) external payable {\\r\\n        require(state(proposalId) == ProposalState.Queued, \\\"GovernorBravo::execute: proposal can only be executed if it is queued\\\");\\r\\n        Proposal storage proposal = proposals[proposalId];\\r\\n        proposal.executed = true;\\r\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\r\\n            timelock.executeTransaction.value(proposal.values[i])(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], proposal.eta);\\r\\n        }\\r\\n        emit ProposalExecuted(proposalId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @notice Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold\\r\\n      * @param proposalId The id of the proposal to cancel\\r\\n      */\\r\\n    function cancel(uint proposalId) external {\\r\\n        require(state(proposalId) != ProposalState.Executed, \\\"GovernorBravo::cancel: cannot cancel executed proposal\\\");\\r\\n\\r\\n        Proposal storage proposal = proposals[proposalId];\\r\\n        require(\\r\\n            msg.sender == guardian\\r\\n            || msg.sender == proposal.proposer\\r\\n            || xvsVault.getPriorVotes(proposal.proposer, sub256(block.number, 1)) < proposalThreshold,\\r\\n            \\\"GovernorBravo::cancel: proposer above threshold\\\"\\r\\n        );\\r\\n\\r\\n        proposal.canceled = true;\\r\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\r\\n            timelock.cancelTransaction(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], proposal.eta);\\r\\n        }\\r\\n\\r\\n        emit ProposalCanceled(proposalId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @notice Gets actions of a proposal\\r\\n      * @param proposalId the id of the proposal\\r\\n      * @return Targets, values, signatures, and calldatas of the proposal actions\\r\\n      */\\r\\n    function getActions(uint proposalId) external view returns (address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas) {\\r\\n        Proposal storage p = proposals[proposalId];\\r\\n        return (p.targets, p.values, p.signatures, p.calldatas);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @notice Gets the receipt for a voter on a given proposal\\r\\n      * @param proposalId the id of proposal\\r\\n      * @param voter The address of the voter\\r\\n      * @return The voting receipt\\r\\n      */\\r\\n    function getReceipt(uint proposalId, address voter) external view returns (Receipt memory) {\\r\\n        return proposals[proposalId].receipts[voter];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @notice Gets the state of a proposal\\r\\n      * @param proposalId The id of the proposal\\r\\n      * @return Proposal state\\r\\n      */\\r\\n    function state(uint proposalId) public view returns (ProposalState) {\\r\\n        require(proposalCount >= proposalId && proposalId > initialProposalId, \\\"GovernorBravo::state: invalid proposal id\\\");\\r\\n        Proposal storage proposal = proposals[proposalId];\\r\\n        if (proposal.canceled) {\\r\\n            return ProposalState.Canceled;\\r\\n        } else if (block.number <= proposal.startBlock) {\\r\\n            return ProposalState.Pending;\\r\\n        } else if (block.number <= proposal.endBlock) {\\r\\n            return ProposalState.Active;\\r\\n        } else if (proposal.forVotes <= proposal.againstVotes || proposal.forVotes < quorumVotes) {\\r\\n            return ProposalState.Defeated;\\r\\n        } else if (proposal.eta == 0) {\\r\\n            return ProposalState.Succeeded;\\r\\n        } else if (proposal.executed) {\\r\\n            return ProposalState.Executed;\\r\\n        } else if (block.timestamp >= add256(proposal.eta, timelock.GRACE_PERIOD())) {\\r\\n            return ProposalState.Expired;\\r\\n        } else {\\r\\n            return ProposalState.Queued;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @notice Cast a vote for a proposal\\r\\n      * @param proposalId The id of the proposal to vote on\\r\\n      * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\r\\n      */\\r\\n    function castVote(uint proposalId, uint8 support) external {\\r\\n        emit VoteCast(msg.sender, proposalId, support, castVoteInternal(msg.sender, proposalId, support), \\\"\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @notice Cast a vote for a proposal with a reason\\r\\n      * @param proposalId The id of the proposal to vote on\\r\\n      * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\r\\n      * @param reason The reason given for the vote by the voter\\r\\n      */\\r\\n    function castVoteWithReason(uint proposalId, uint8 support, string calldata reason) external {\\r\\n        emit VoteCast(msg.sender, proposalId, support, castVoteInternal(msg.sender, proposalId, support), reason);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @notice Cast a vote for a proposal by signature\\r\\n      * @dev External function that accepts EIP-712 signatures for voting on proposals.\\r\\n      */\\r\\n    function castVoteBySig(uint proposalId, uint8 support, uint8 v, bytes32 r, bytes32 s) external {\\r\\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainIdInternal(), address(this)));\\r\\n        bytes32 structHash = keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support));\\r\\n        bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\r\\n        address signatory = ecrecover(digest, v, r, s);\\r\\n        require(signatory != address(0), \\\"GovernorBravo::castVoteBySig: invalid signature\\\");\\r\\n        emit VoteCast(signatory, proposalId, support, castVoteInternal(signatory, proposalId, support), \\\"\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @notice Internal function that caries out voting logic\\r\\n      * @param voter The voter that is casting their vote\\r\\n      * @param proposalId The id of the proposal to vote on\\r\\n      * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\r\\n      * @return The number of votes cast\\r\\n      */\\r\\n    function castVoteInternal(address voter, uint proposalId, uint8 support) internal returns (uint96) {\\r\\n        require(state(proposalId) == ProposalState.Active, \\\"GovernorBravo::castVoteInternal: voting is closed\\\");\\r\\n        require(support <= 2, \\\"GovernorBravo::castVoteInternal: invalid vote type\\\");\\r\\n        Proposal storage proposal = proposals[proposalId];\\r\\n        Receipt storage receipt = proposal.receipts[voter];\\r\\n        require(receipt.hasVoted == false, \\\"GovernorBravo::castVoteInternal: voter already voted\\\");\\r\\n        uint96 votes = xvsVault.getPriorVotes(voter, proposal.startBlock);\\r\\n\\r\\n        if (support == 0) {\\r\\n            proposal.againstVotes = add256(proposal.againstVotes, votes);\\r\\n        } else if (support == 1) {\\r\\n            proposal.forVotes = add256(proposal.forVotes, votes);\\r\\n        } else if (support == 2) {\\r\\n            proposal.abstainVotes = add256(proposal.abstainVotes, votes);\\r\\n        }\\r\\n\\r\\n        receipt.hasVoted = true;\\r\\n        receipt.support = support;\\r\\n        receipt.votes = votes;\\r\\n\\r\\n        return votes;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @notice Sets the new governance guardian\\r\\n      * @param newGuardian the address of the new guardian\\r\\n      */\\r\\n    function _setGuardian(address newGuardian) external {\\r\\n        require(msg.sender == guardian || msg.sender == admin, \\\"GovernorBravo::_setGuardian: admin or guardian only\\\");\\r\\n        require(newGuardian != address(0), \\\"GovernorBravo::_setGuardian: cannot live without a guardian\\\");\\r\\n        address oldGuardian = guardian;\\r\\n        guardian = newGuardian;\\r\\n\\r\\n        emit NewGuardian(oldGuardian, newGuardian);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @notice Admin function for setting the voting delay\\r\\n      * @param newVotingDelay new voting delay, in blocks\\r\\n      */\\r\\n    function _setVotingDelay(uint newVotingDelay) external {\\r\\n        require(msg.sender == admin, \\\"GovernorBravo::_setVotingDelay: admin only\\\");\\r\\n        require(newVotingDelay >= MIN_VOTING_DELAY && newVotingDelay <= MAX_VOTING_DELAY, \\\"GovernorBravo::_setVotingDelay: invalid voting delay\\\");\\r\\n        uint oldVotingDelay = votingDelay;\\r\\n        votingDelay = newVotingDelay;\\r\\n\\r\\n        emit VotingDelaySet(oldVotingDelay, votingDelay);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @notice Admin function for setting the voting period\\r\\n      * @param newVotingPeriod new voting period, in blocks\\r\\n      */\\r\\n    function _setVotingPeriod(uint newVotingPeriod) external {\\r\\n        require(msg.sender == admin, \\\"GovernorBravo::_setVotingPeriod: admin only\\\");\\r\\n        require(newVotingPeriod >= MIN_VOTING_PERIOD && newVotingPeriod <= MAX_VOTING_PERIOD, \\\"GovernorBravo::_setVotingPeriod: invalid voting period\\\");\\r\\n        uint oldVotingPeriod = votingPeriod;\\r\\n        votingPeriod = newVotingPeriod;\\r\\n\\r\\n        emit VotingPeriodSet(oldVotingPeriod, votingPeriod);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @notice Admin function for setting the proposal threshold\\r\\n      * @dev newProposalThreshold must be greater than the hardcoded min\\r\\n      * @param newProposalThreshold new proposal threshold\\r\\n      */\\r\\n    function _setProposalThreshold(uint newProposalThreshold) external {\\r\\n        require(msg.sender == admin, \\\"GovernorBravo::_setProposalThreshold: admin only\\\");\\r\\n        require(newProposalThreshold >= MIN_PROPOSAL_THRESHOLD && newProposalThreshold <= MAX_PROPOSAL_THRESHOLD, \\\"GovernorBravo::_setProposalThreshold: invalid proposal threshold\\\");\\r\\n        uint oldProposalThreshold = proposalThreshold;\\r\\n        proposalThreshold = newProposalThreshold;\\r\\n\\r\\n        emit ProposalThresholdSet(oldProposalThreshold, proposalThreshold);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @notice Initiate the GovernorBravo contract\\r\\n      * @dev Admin only. Sets initial proposal id which initiates the contract, ensuring a continuous proposal id count\\r\\n      * @param governorAlpha The address for the Governor to continue the proposal id count from\\r\\n      */\\r\\n    function _initiate(address governorAlpha) external {\\r\\n        require(msg.sender == admin, \\\"GovernorBravo::_initiate: admin only\\\");\\r\\n        require(initialProposalId == 0, \\\"GovernorBravo::_initiate: can only initiate once\\\");\\r\\n        proposalCount = GovernorAlpha(governorAlpha).proposalCount();\\r\\n        initialProposalId = proposalCount;\\r\\n        timelock.acceptAdmin();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @notice Set max proposal operations\\r\\n      * @dev Admin only.\\r\\n      * @param proposalMaxOperations_ Max proposal operations\\r\\n      */\\r\\n    function _setProposalMaxOperations(uint proposalMaxOperations_) external {\\r\\n        require(msg.sender == admin, \\\"GovernorBravo::_setProposalMaxOperations: admin only\\\");\\r\\n        uint oldProposalMaxOperations = proposalMaxOperations;\\r\\n        proposalMaxOperations = proposalMaxOperations_;\\r\\n\\r\\n        emit ProposalMaxOperationsUpdated(oldProposalMaxOperations, proposalMaxOperations_);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @notice Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\\r\\n      * @dev Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\\r\\n      * @param newPendingAdmin New pending admin.\\r\\n      */\\r\\n    function _setPendingAdmin(address newPendingAdmin) external {\\r\\n        // Check caller = admin\\r\\n        require(msg.sender == admin, \\\"GovernorBravo:_setPendingAdmin: admin only\\\");\\r\\n\\r\\n        // Save current value, if any, for inclusion in log\\r\\n        address oldPendingAdmin = pendingAdmin;\\r\\n\\r\\n        // Store pendingAdmin with value newPendingAdmin\\r\\n        pendingAdmin = newPendingAdmin;\\r\\n\\r\\n        // Emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin)\\r\\n        emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @notice Accepts transfer of admin rights. msg.sender must be pendingAdmin\\r\\n      * @dev Admin function for pending admin to accept role and update admin\\r\\n      */\\r\\n    function _acceptAdmin() external {\\r\\n        // Check caller is pendingAdmin and pendingAdmin \\u2260 address(0)\\r\\n        require(msg.sender == pendingAdmin && msg.sender != address(0), \\\"GovernorBravo:_acceptAdmin: pending admin only\\\");\\r\\n\\r\\n        // Save current values for inclusion in log\\r\\n        address oldAdmin = admin;\\r\\n        address oldPendingAdmin = pendingAdmin;\\r\\n\\r\\n        // Store admin with value pendingAdmin\\r\\n        admin = pendingAdmin;\\r\\n\\r\\n        // Clear the pending value\\r\\n        pendingAdmin = address(0);\\r\\n\\r\\n        emit NewAdmin(oldAdmin, admin);\\r\\n        emit NewPendingAdmin(oldPendingAdmin, pendingAdmin);\\r\\n    }\\r\\n\\r\\n    function add256(uint256 a, uint256 b) internal pure returns (uint) {\\r\\n        uint c = a + b;\\r\\n        require(c >= a, \\\"addition overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub256(uint256 a, uint256 b) internal pure returns (uint) {\\r\\n        require(b <= a, \\\"subtraction underflow\\\");\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    function getChainIdInternal() internal pure returns (uint) {\\r\\n        uint chainId;\\r\\n        assembly { chainId := chainid() }\\r\\n        return chainId;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x176cb85ec44fa7414c9b027592ec9529f91248a152ee1315a0db4dcdc0d8b178\"},\"contracts/Governance/GovernorBravoInterfaces.sol\":{\"content\":\"pragma solidity ^0.5.16;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n\\r\\ncontract GovernorBravoEvents {\\r\\n    /// @notice An event emitted when a new proposal is created\\r\\n    event ProposalCreated(uint id, address proposer, address[] targets, uint[] values, string[] signatures, bytes[] calldatas, uint startBlock, uint endBlock, string description);\\r\\n\\r\\n    /// @notice An event emitted when a vote has been cast on a proposal\\r\\n    /// @param voter The address which casted a vote\\r\\n    /// @param proposalId The proposal id which was voted on\\r\\n    /// @param support Support value for the vote. 0=against, 1=for, 2=abstain\\r\\n    /// @param votes Number of votes which were cast by the voter\\r\\n    /// @param reason The reason given for the vote by the voter\\r\\n    event VoteCast(address indexed voter, uint proposalId, uint8 support, uint votes, string reason);\\r\\n\\r\\n    /// @notice An event emitted when a proposal has been canceled\\r\\n    event ProposalCanceled(uint id);\\r\\n\\r\\n    /// @notice An event emitted when a proposal has been queued in the Timelock\\r\\n    event ProposalQueued(uint id, uint eta);\\r\\n\\r\\n    /// @notice An event emitted when a proposal has been executed in the Timelock\\r\\n    event ProposalExecuted(uint id);\\r\\n\\r\\n    /// @notice An event emitted when the voting delay is set\\r\\n    event VotingDelaySet(uint oldVotingDelay, uint newVotingDelay);\\r\\n\\r\\n    /// @notice An event emitted when the voting period is set\\r\\n    event VotingPeriodSet(uint oldVotingPeriod, uint newVotingPeriod);\\r\\n\\r\\n    /// @notice Emitted when implementation is changed\\r\\n    event NewImplementation(address oldImplementation, address newImplementation);\\r\\n\\r\\n    /// @notice Emitted when proposal threshold is set\\r\\n    event ProposalThresholdSet(uint oldProposalThreshold, uint newProposalThreshold);\\r\\n\\r\\n    /// @notice Emitted when pendingAdmin is changed\\r\\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\\r\\n\\r\\n    /// @notice Emitted when pendingAdmin is accepted, which means admin is updated\\r\\n    event NewAdmin(address oldAdmin, address newAdmin);\\r\\n\\r\\n    /// @notice Emitted when the new guardian address is set\\r\\n    event NewGuardian(address oldGuardian, address newGuardian);\\r\\n\\r\\n    /// @notice Emitted when the maximum number of operations in one proposal is updated\\r\\n    event ProposalMaxOperationsUpdated(uint oldMaxOperations, uint newMaxOperations);\\r\\n}\\r\\n\\r\\ncontract GovernorBravoDelegatorStorage {\\r\\n    /// @notice Administrator for this contract\\r\\n    address public admin;\\r\\n\\r\\n    /// @notice Pending administrator for this contract\\r\\n    address public pendingAdmin;\\r\\n\\r\\n    /// @notice Active brains of Governor\\r\\n    address public implementation;\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Storage for Governor Bravo Delegate\\r\\n * @notice For future upgrades, do not change GovernorBravoDelegateStorageV1. Create a new\\r\\n * contract which implements GovernorBravoDelegateStorageV1 and following the naming convention\\r\\n * GovernorBravoDelegateStorageVX.\\r\\n */\\r\\ncontract GovernorBravoDelegateStorageV1 is GovernorBravoDelegatorStorage {\\r\\n\\r\\n    /// @notice The delay before voting on a proposal may take place, once proposed, in blocks\\r\\n    uint public votingDelay;\\r\\n\\r\\n    /// @notice The duration of voting on a proposal, in blocks\\r\\n    uint public votingPeriod;\\r\\n\\r\\n    /// @notice The number of votes required in order for a voter to become a proposer\\r\\n    uint public proposalThreshold;\\r\\n\\r\\n    /// @notice Initial proposal id set at become\\r\\n    uint public initialProposalId;\\r\\n\\r\\n    /// @notice The total number of proposals\\r\\n    uint public proposalCount;\\r\\n\\r\\n    /// @notice The address of the Venus Protocol Timelock\\r\\n    TimelockInterface public timelock;\\r\\n\\r\\n    /// @notice The address of the Venus governance token\\r\\n    XvsVaultInterface public xvsVault;\\r\\n\\r\\n    /// @notice The official record of all proposals ever proposed\\r\\n    mapping (uint => Proposal) public proposals;\\r\\n\\r\\n    /// @notice The latest proposal for each proposer\\r\\n    mapping (address => uint) public latestProposalIds;\\r\\n\\r\\n\\r\\n    struct Proposal {\\r\\n        /// @notice Unique id for looking up a proposal\\r\\n        uint id;\\r\\n\\r\\n        /// @notice Creator of the proposal\\r\\n        address proposer;\\r\\n\\r\\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\\r\\n        uint eta;\\r\\n\\r\\n        /// @notice the ordered list of target addresses for calls to be made\\r\\n        address[] targets;\\r\\n\\r\\n        /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\\r\\n        uint[] values;\\r\\n\\r\\n        /// @notice The ordered list of function signatures to be called\\r\\n        string[] signatures;\\r\\n\\r\\n        /// @notice The ordered list of calldata to be passed to each call\\r\\n        bytes[] calldatas;\\r\\n\\r\\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\\r\\n        uint startBlock;\\r\\n\\r\\n        /// @notice The block at which voting ends: votes must be cast prior to this block\\r\\n        uint endBlock;\\r\\n\\r\\n        /// @notice Current number of votes in favor of this proposal\\r\\n        uint forVotes;\\r\\n\\r\\n        /// @notice Current number of votes in opposition to this proposal\\r\\n        uint againstVotes;\\r\\n\\r\\n        /// @notice Current number of votes for abstaining for this proposal\\r\\n        uint abstainVotes;\\r\\n\\r\\n        /// @notice Flag marking whether the proposal has been canceled\\r\\n        bool canceled;\\r\\n\\r\\n        /// @notice Flag marking whether the proposal has been executed\\r\\n        bool executed;\\r\\n\\r\\n        /// @notice Receipts of ballots for the entire set of voters\\r\\n        mapping (address => Receipt) receipts;\\r\\n    }\\r\\n\\r\\n    /// @notice Ballot receipt record for a voter\\r\\n    struct Receipt {\\r\\n        /// @notice Whether or not a vote has been cast\\r\\n        bool hasVoted;\\r\\n\\r\\n        /// @notice Whether or not the voter supports the proposal or abstains\\r\\n        uint8 support;\\r\\n\\r\\n        /// @notice The number of votes the voter had, which were cast\\r\\n        uint96 votes;\\r\\n    }\\r\\n\\r\\n    /// @notice Possible states that a proposal may be in\\r\\n    enum ProposalState {\\r\\n        Pending,\\r\\n        Active,\\r\\n        Canceled,\\r\\n        Defeated,\\r\\n        Succeeded,\\r\\n        Queued,\\r\\n        Expired,\\r\\n        Executed\\r\\n    }\\r\\n\\r\\n    /// @notice The maximum number of actions that can be included in a proposal\\r\\n    uint public proposalMaxOperations;\\r\\n\\r\\n    /// @notice A privileged role that can cancel any proposal\\r\\n    address public guardian;\\r\\n}\\r\\n\\r\\ninterface TimelockInterface {\\r\\n    function delay() external view returns (uint);\\r\\n    function GRACE_PERIOD() external view returns (uint);\\r\\n    function acceptAdmin() external;\\r\\n    function queuedTransactions(bytes32 hash) external view returns (bool);\\r\\n    function queueTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external returns (bytes32);\\r\\n    function cancelTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external;\\r\\n    function executeTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external payable returns (bytes memory);\\r\\n}\\r\\n\\r\\ninterface XvsVaultInterface {\\r\\n    function getPriorVotes(address account, uint blockNumber) external view returns (uint96);\\r\\n}\\r\\n\\r\\ninterface GovernorAlpha {\\r\\n    /// @notice The total number of proposals\\r\\n    function proposalCount() external returns (uint);\\r\\n}\\r\\n\",\"keccak256\":\"0x39c8e5c98855e9a346e23c220ba143736c60a1c1314987c8cf5fabb097e9910e\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "methods": {
      "_acceptAdmin()": {
        "details": "Admin function for pending admin to accept role and update admin"
      },
      "_initiate(address)": {
        "details": "Admin only. Sets initial proposal id which initiates the contract, ensuring a continuous proposal id count",
        "params": {
          "governorAlpha": "The address for the Governor to continue the proposal id count from"
        }
      },
      "_setGuardian(address)": {
        "params": {
          "newGuardian": "the address of the new guardian"
        }
      },
      "_setPendingAdmin(address)": {
        "details": "Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.",
        "params": {
          "newPendingAdmin": "New pending admin."
        }
      },
      "_setProposalMaxOperations(uint256)": {
        "details": "Admin only.",
        "params": {
          "proposalMaxOperations_": "Max proposal operations"
        }
      },
      "_setProposalThreshold(uint256)": {
        "details": "newProposalThreshold must be greater than the hardcoded min",
        "params": {
          "newProposalThreshold": "new proposal threshold"
        }
      },
      "_setVotingDelay(uint256)": {
        "params": {
          "newVotingDelay": "new voting delay, in blocks"
        }
      },
      "_setVotingPeriod(uint256)": {
        "params": {
          "newVotingPeriod": "new voting period, in blocks"
        }
      },
      "cancel(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to cancel"
        }
      },
      "castVote(uint256,uint8)": {
        "params": {
          "proposalId": "The id of the proposal to vote on",
          "support": "The support value for the vote. 0=against, 1=for, 2=abstain"
        }
      },
      "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
        "details": "External function that accepts EIP-712 signatures for voting on proposals."
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "params": {
          "proposalId": "The id of the proposal to vote on",
          "reason": "The reason given for the vote by the voter",
          "support": "The support value for the vote. 0=against, 1=for, 2=abstain"
        }
      },
      "execute(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to execute"
        }
      },
      "getActions(uint256)": {
        "params": {
          "proposalId": "the id of the proposal"
        },
        "return": "Targets, values, signatures, and calldatas of the proposal actions"
      },
      "getReceipt(uint256,address)": {
        "params": {
          "proposalId": "the id of proposal",
          "voter": "The address of the voter"
        },
        "return": "The voting receipt"
      },
      "initialize(address,address,uint256,uint256,uint256,address)": {
        "params": {
          "proposalThreshold_": "The initial proposal threshold",
          "timelock_": "The address of the Timelock",
          "votingDelay_": "The initial voting delay",
          "votingPeriod_": "The initial voting period",
          "xvsVault_": "The address of the XvsVault"
        }
      },
      "propose(address[],uint256[],string[],bytes[],string)": {
        "params": {
          "calldatas": "Calldatas for proposal calls",
          "description": "String description of the proposal",
          "signatures": "Function signatures for proposal calls",
          "targets": "Target addresses for proposal calls",
          "values": "Eth values for proposal calls"
        },
        "return": "Proposal id of new proposal"
      },
      "queue(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to queue"
        }
      },
      "state(uint256)": {
        "params": {
          "proposalId": "The id of the proposal"
        },
        "return": "Proposal state"
      }
    }
  },
  "userdoc": {
    "methods": {
      "_acceptAdmin()": {
        "notice": "Accepts transfer of admin rights. msg.sender must be pendingAdmin"
      },
      "_initiate(address)": {
        "notice": "Initiate the GovernorBravo contract"
      },
      "_setGuardian(address)": {
        "notice": "Sets the new governance guardian"
      },
      "_setPendingAdmin(address)": {
        "notice": "Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer."
      },
      "_setProposalMaxOperations(uint256)": {
        "notice": "Set max proposal operations"
      },
      "_setProposalThreshold(uint256)": {
        "notice": "Admin function for setting the proposal threshold"
      },
      "_setVotingDelay(uint256)": {
        "notice": "Admin function for setting the voting delay"
      },
      "_setVotingPeriod(uint256)": {
        "notice": "Admin function for setting the voting period"
      },
      "cancel(uint256)": {
        "notice": "Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold"
      },
      "castVote(uint256,uint8)": {
        "notice": "Cast a vote for a proposal"
      },
      "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
        "notice": "Cast a vote for a proposal by signature"
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "notice": "Cast a vote for a proposal with a reason"
      },
      "execute(uint256)": {
        "notice": "Executes a queued proposal if eta has passed"
      },
      "getActions(uint256)": {
        "notice": "Gets actions of a proposal"
      },
      "getReceipt(uint256,address)": {
        "notice": "Gets the receipt for a voter on a given proposal"
      },
      "initialize(address,address,uint256,uint256,uint256,address)": {
        "notice": "Used to initialize the contract during delegator contructor"
      },
      "propose(address[],uint256[],string[],bytes[],string)": {
        "notice": "Function used to propose a new proposal. Sender must have delegates above the proposal threshold"
      },
      "queue(uint256)": {
        "notice": "Queues a proposal of state succeeded"
      },
      "state(uint256)": {
        "notice": "Gets the state of a proposal"
      }
    }
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1647,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1649,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "pendingAdmin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1651,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "implementation",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 1656,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "votingDelay",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1658,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "votingPeriod",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1660,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "proposalThreshold",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1662,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "initialProposalId",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 1664,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "proposalCount",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 1666,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "timelock",
        "offset": 0,
        "slot": "8",
        "type": "t_contract(TimelockInterface)1798"
      },
      {
        "astId": 1668,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "xvsVault",
        "offset": 0,
        "slot": "9",
        "type": "t_contract(XvsVaultInterface)1808"
      },
      {
        "astId": 1672,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "proposals",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_struct(Proposal)1713_storage)"
      },
      {
        "astId": 1676,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "latestProposalIds",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1731,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "proposalMaxOperations",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 1733,
        "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
        "label": "guardian",
        "offset": 0,
        "slot": "13",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(TimelockInterface)1798": {
        "encoding": "inplace",
        "label": "contract TimelockInterface",
        "numberOfBytes": "20"
      },
      "t_contract(XvsVaultInterface)1808": {
        "encoding": "inplace",
        "label": "contract XvsVaultInterface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Receipt)1720_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GovernorBravoDelegateStorageV1.Receipt)",
        "numberOfBytes": "32",
        "value": "t_struct(Receipt)1720_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Proposal)1713_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GovernorBravoDelegateStorageV1.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)1713_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)1713_storage": {
        "encoding": "inplace",
        "label": "struct GovernorBravoDelegateStorageV1.Proposal",
        "members": [
          {
            "astId": 1678,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1680,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "proposer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 1682,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "eta",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1685,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "targets",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 1688,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "values",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 1691,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "signatures",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 1694,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "calldatas",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_bytes_storage)dyn_storage"
          },
          {
            "astId": 1696,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "startBlock",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 1698,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "endBlock",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 1700,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "forVotes",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 1702,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "againstVotes",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 1704,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "abstainVotes",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          },
          {
            "astId": 1706,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "canceled",
            "offset": 0,
            "slot": "12",
            "type": "t_bool"
          },
          {
            "astId": 1708,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "executed",
            "offset": 1,
            "slot": "12",
            "type": "t_bool"
          },
          {
            "astId": 1712,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "receipts",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(Receipt)1720_storage)"
          }
        ],
        "numberOfBytes": "448"
      },
      "t_struct(Receipt)1720_storage": {
        "encoding": "inplace",
        "label": "struct GovernorBravoDelegateStorageV1.Receipt",
        "members": [
          {
            "astId": 1715,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "hasVoted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 1717,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "support",
            "offset": 1,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 1719,
            "contract": "contracts/Governance/GovernorBravoDelegate.sol:GovernorBravoDelegate",
            "label": "votes",
            "offset": 2,
            "slot": "0",
            "type": "t_uint96"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      },
      "t_uint96": {
        "encoding": "inplace",
        "label": "uint96",
        "numberOfBytes": "12"
      }
    }
  }
}